namespace HMACHasher.Hasher
{
    static public class HMACValidator
    {
        // MACPrimaryPANSalt: ENCRYPT PAN-SECRET with MAC-SECONDARY-HASH
        public static readonly byte[] MACPrimaryPANSalt    = new byte[] { 0x76, 0x58, 0x38, 0x6c, 0x36, 0x53, 0x4f, 0x6d, 0x53, 0x76, 0x6d, 0x70, 0x57, 0x52, 0x69, 0x36, 0x41, 0x44, 0x6e, 0x53, 0x73, 0x71, 0x6c, 0x5a, 0x47, 0x4c, 0x6f, 0x41, 0x4f, 0x64, 0x4b, 0x79, 0x71, 0x56, 0x6b, 0x59, 0x75, 0x67, 0x41, 0x35, 0x30, 0x72, 0x4b, 0x41, 0x4e, 0x77, 0x4e, 0x41, 0x35, 0x4d, 0x2b, 0x6e, 0x78, 0x41, 0x3d, 0x3d };
        // MACPrimaryHASH: ?
        //public static readonly byte[] MACPrimaryKeyHASH    = new byte[] { 0x79, 0x32, 0x6d, 0x61, 0x6b, 0x33, 0x4a, 0x43, 0x37, 0x41, 0x63, 0x54, 0x68, 0x4b, 0x6f, 0x79, 0x70, 0x63, 0x44, 0x62, 0x41, 0x6a, 0x33, 0x4b, 0x64, 0x54, 0x32, 0x36, 0x52, 0x6e, 0x32, 0x71, 0x63, 0x52, 0x50, 0x36, 0x61, 0x30, 0x65, 0x4e, 0x43, 0x48, 0x58, 0x6c, 0x46, 0x71, 0x6e, 0x52, 0x71, 0x39, 0x48, 0x42, 0x4f, 0x63, 0x6e, 0x69, 0x31, 0x53, 0x61, 0x79, 0x4b, 0x69, 0x76, 0x6e, 0x68, 0x50, 0x4b, 0x4f, 0x42, 0x31, 0x69, 0x52, 0x44, 0x4e, 0x52, 0x49, 0x71, 0x49, 0x36, 0x45, 0x48, 0x78, 0x64, 0x35, 0x66, 0x49, 0x68, 0x44, 0x59, 0x63, 0x72, 0x34, 0x35, 0x54, 0x69, 0x62 };
        // MACPrimaryHASH: VSSKey-06-HMAC in BYTE ARRAY
        public static readonly byte[] MACPrimaryKeyHASH    = new byte[] { 0x39, 0x38, 0x41, 0x38, 0x41, 0x41, 0x45, 0x44, 0x35, 0x41, 0x32, 0x42, 0x41, 0x39, 0x45, 0x32, 0x32, 0x38, 0x42, 0x31, 0x33, 0x38, 0x32, 0x37, 0x34, 0x46, 0x44, 0x46, 0x35, 0x34, 0x36, 0x44, 0x36, 0x36, 0x38, 0x38, 0x44, 0x32, 0x41, 0x42, 0x38, 0x44, 0x39, 0x41, 0x33, 0x36, 0x45, 0x30, 0x41, 0x35, 0x30, 0x41, 0x35, 0x42, 0x46, 0x33, 0x42, 0x31, 0x34, 0x32, 0x41, 0x46, 0x42, 0x30 };
        // MACSecondaryHASH: VSSKey-07-HMAC in BYTE ARRAY
        public static readonly byte[] MACSecondaryKeyHASH  = new byte[] { 0x44, 0x31, 0x46, 0x38, 0x38, 0x32, 0x37, 0x44, 0x44, 0x39, 0x32, 0x37, 0x36, 0x46, 0x39, 0x46, 0x38, 0x30, 0x46, 0x38, 0x38, 0x39, 0x30, 0x44, 0x33, 0x45, 0x36, 0x30, 0x37, 0x41, 0x43, 0x30, 0x33, 0x43, 0x41, 0x30, 0x32, 0x32, 0x42, 0x41, 0x39, 0x31, 0x42, 0x38, 0x30, 0x32, 0x34, 0x33, 0x35, 0x36, 0x44, 0x43, 0x44, 0x46, 0x35, 0x34, 0x41, 0x44, 0x34, 0x33, 0x34, 0x46, 0x38, 0x33 };
        // MACPrimaryHASHSalt: ENCRYPT VSSKey-06 with MAC-SECONDARY-HASH
        public static readonly byte[] MACPrimaryHASHSalt   = new byte[] { 0x5a, 0x2b, 0x50, 0x66, 0x4d, 0x4c, 0x55, 0x76, 0x36, 0x64, 0x76, 0x46, 0x4f, 0x77, 0x72, 0x31, 0x4d, 0x75, 0x36, 0x50, 0x63, 0x76, 0x58, 0x30, 0x68, 0x45, 0x67, 0x6c, 0x57, 0x71, 0x38, 0x6e, 0x6e, 0x57, 0x74, 0x5a, 0x58, 0x33, 0x2b, 0x6c, 0x45, 0x79, 0x59, 0x38, 0x77, 0x58, 0x37, 0x67, 0x7a, 0x6c, 0x49, 0x56, 0x51, 0x69, 0x53, 0x76, 0x58, 0x65, 0x76, 0x57, 0x66, 0x56, 0x4b, 0x78, 0x6c, 0x6a, 0x45, 0x49, 0x4e, 0x49, 0x52, 0x42, 0x30, 0x2f, 0x43, 0x79, 0x69, 0x51, 0x50, 0x62, 0x4d, 0x55, 0x62, 0x30, 0x36, 0x59, 0x41, 0x33, 0x41, 0x30, 0x44, 0x6b, 0x7a, 0x36, 0x66, 0x45 };
        // MACSecondaryHASHSalt: ENCRYPT VSSKey-07 with MAC-PRIMARY-HASH
        //public static readonly byte[] MACSecondaryHASHSalt = new byte[] { 0x69, 0x76, 0x70, 0x7a, 0x71, 0x51, 0x59, 0x4f, 0x38, 0x59, 0x67, 0x6f, 0x51, 0x4c, 0x79, 0x35, 0x36, 0x38, 0x67, 0x73, 0x72, 0x51, 0x53, 0x34, 0x39, 0x62, 0x6f, 0x48, 0x65, 0x52, 0x70, 0x75, 0x37, 0x44, 0x72, 0x37, 0x79, 0x58, 0x6a, 0x4c, 0x32, 0x6d, 0x71, 0x46, 0x45, 0x6e, 0x34, 0x32, 0x56, 0x37, 0x44, 0x41, 0x2f, 0x4c, 0x4e, 0x63, 0x42, 0x70, 0x6d, 0x4e, 0x4d, 0x58, 0x48, 0x6d, 0x6b, 0x43, 0x32, 0x6b, 0x6c, 0x6c, 0x6a, 0x33, 0x32, 0x7a, 0x4b, 0x72, 0x54, 0x69, 0x32, 0x4c, 0x4c, 0x72, 0x54, 0x38, 0x4f, 0x57, 0x2f, 0x4c, 0x6b, 0x41, 0x4a, 0x4e, 0x4f, 0x47, 0x56, 0x73 };
        public static readonly byte[] MACSecondaryHASHSalt = new byte[] { 0x66, 0x6c, 0x75, 0x76, 0x77, 0x64, 0x68, 0x6c, 0x2f, 0x31, 0x31, 0x76, 0x52, 0x35, 0x57, 0x71, 0x77, 0x4c, 0x48, 0x59, 0x63, 0x48, 0x6f, 0x32, 0x52, 0x66, 0x77, 0x33, 0x33, 0x54, 0x31, 0x34, 0x50, 0x48, 0x32, 0x78, 0x50, 0x74, 0x4d, 0x38, 0x6c, 0x33, 0x76, 0x38, 0x35, 0x50, 0x4b, 0x77, 0x77, 0x47, 0x66, 0x4e, 0x4d, 0x46, 0x5a, 0x61, 0x4e, 0x31, 0x66, 0x52, 0x44, 0x47, 0x71, 0x33, 0x2b, 0x50, 0x30, 0x58, 0x51, 0x6d, 0x4f, 0x39, 0x4d, 0x67, 0x49, 0x4d, 0x54, 0x70, 0x79, 0x68, 0x54, 0x65, 0x43, 0x53, 0x69, 0x59, 0x68, 0x44, 0x59, 0x63, 0x72, 0x34, 0x35, 0x54, 0x69, 0x62 };
        // KEY INJECTION
        public static readonly byte[] HMACKEY06 = new byte[] { 0x01, 0x23, 0x45, 0x67, 0x89, 0xAB, 0xCD, 0xEF, 0xFE, 0xDC, 0xBA, 0x98, 0x76, 0x54, 0x32, 0x10, 0x01, 0x23, 0x45, 0x67, 0x89, 0xAB, 0xCD, 0xEF, 0xFE, 0xDC, 0xBA, 0x98, 0x76, 0x54, 0x32, 0x10, 0x01, 0x23, 0x45, 0x67, 0x89, 0xAB, 0xCD, 0xEF, 0xFE, 0xDC, 0xBA, 0x98, 0x76, 0x54, 0x32, 0x10, 0x01, 0x23, 0x45, 0x67, 0x89, 0xAB, 0xCD, 0xEF, 0xFE, 0xDC, 0xBA, 0x98, 0x76, 0x54, 0x32, 0x10 };
        public static readonly byte[] HMACKEY07 = new byte[] { 0xFE, 0xDC, 0xBA, 0x98, 0x76, 0x54, 0x32, 0x10, 0x01, 0x23, 0x45, 0x67, 0x89, 0xAB, 0xCD, 0xEF, 0xFE, 0xDC, 0xBA, 0x98, 0x76, 0x54, 0x32, 0x10, 0x01, 0x23, 0x45, 0x67, 0x89, 0xAB, 0xCD, 0xEF, 0xFE, 0xDC, 0xBA, 0x98, 0x76, 0x54, 0x32, 0x10, 0x01, 0x23, 0x45, 0x67, 0x89, 0xAB, 0xCD, 0xEF, 0xFE, 0xDC, 0xBA, 0x98, 0x76, 0x54, 0x32, 0x10, 0x01, 0x23, 0x45, 0x67, 0x89, 0xAB, 0xCD, 0xEF };
        //public static readonly byte[] HMACKEY06 = new byte[] { 0x19, 0xAB, 0xCD, 0xEF, 0xFE, 0xDC, 0xBA, 0x98, 0x76, 0x54, 0x32, 0x10, 0x01, 0x23, 0x45, 0x67, 0x29, 0xAB, 0xCD, 0xEF, 0xFE, 0xDC, 0xBA, 0x98, 0x76, 0x54, 0x32, 0x10, 0x01, 0x23, 0x45, 0x67, 0x39, 0xAB, 0xCD, 0xEF, 0xFE, 0xDC, 0xBA, 0x98, 0x76, 0x54, 0x32, 0x10, 0x01, 0x23, 0x45, 0x67, 0x49, 0xAB, 0xCD, 0xEF, 0xFE, 0xDC, 0xBA, 0x98, 0x76, 0x54, 0x32, 0x10, 0x01, 0x23, 0x45, 0x67 };
        //public static readonly byte[] HMACKEY07 = new byte[] { 0x15, 0x67, 0x89, 0xAB, 0xCD, 0xEF, 0xFE, 0xDC, 0xBA, 0x98, 0x76, 0x54, 0x32, 0x10, 0x01, 0x23, 0x25, 0x67, 0x89, 0xAB, 0xCD, 0xEF, 0xFE, 0xDC, 0xBA, 0x98, 0x76, 0x54, 0x32, 0x10, 0x01, 0x23, 0x35, 0x67, 0x89, 0xAB, 0xCD, 0xEF, 0xFE, 0xDC, 0xBA, 0x98, 0x76, 0x54, 0x32, 0x10, 0x01, 0x23, 0x45, 0x67, 0x89, 0xAB, 0xCD, 0xEF, 0xFE, 0xDC, 0xBA, 0x98, 0x76, 0x54, 0x32, 0x10, 0x01, 0x23 };
    }
}
